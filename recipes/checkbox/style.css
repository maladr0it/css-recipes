*,
*::before,
*::after {
  box-sizing: border-box;
}

body {
  font-family: sans-serif;
}

label {
  display: flex;
  align-items: center;
}

/* add vertical space between the items */
label + label {
  margin-top: 8px;
}

/* hide the input visually, but don't give it "display: none" as it will break keyboard controls */
input {
  opacity: 0;
  position: absolute;
  pointer-events: none;
}

.box {
  width: 20px;
  height: 20px;
  border: 1px solid grey;
  border-radius: 2px;
  user-select: none; /* prevent the user from selecting text when interacting with the box */
}

.labelText {
  margin-left: 8px;
}

/* the "~" aka general sibling combinator lets us select anything following a checked input */
input:checked ~ .box {
  background-color: hotpink;
  border-color: hotpink;
  /* use a background image for the check-mark */
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="white" d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"></path></svg>');
  background-size: 12px;
  background-position: center;
  background-repeat: no-repeat;
}

/* add a focus ring around the circle to assist with keyboard control */
/* also, keep the focus ring around the box when is is active (being clicked) to stop it flickering in and out */
/* layer 2 solid shadows on top of each other in order to create the ring effect */
input:focus ~ .box,
input:active ~ .box {
  box-shadow: 0 0 0 1px white, 0 0 0 3px cornflowerblue;
}
